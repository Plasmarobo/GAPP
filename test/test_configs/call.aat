	SECTION	"RST00",HOME[$00]
RST_00:	
	LD L,0x00
	jp	BRSTA

	SECTION	"RST08",HOME[$08]
RST_08:	
	LD L,0x08
	jp	BRSTB

	SECTION	"RST10",HOME[$10]
RST_10:
	LD L,0x10
	jp	BRSTC

	SECTION	"RST18",HOME[$18]
RST_18:
	LD L,0x18
	jp	BRSTD

	SECTION	"RST20",HOME[$20]
RST_20:
	LD L,0x20
	jp	BRSTE

	SECTION	"RST28",HOME[$28]
RST_28:
	LD L,0x28
	jp	BRSTF

	SECTION	"RST30",HOME[$30]
RST_30:
	LD L,0x30
	jp	BRSTG

	SECTION	"RST38",HOME[$38]
RST_38:
	LD L,0x38
	jp	BRSTH

	SECTION	"VBlankIRQ",HOME[$40]
VBL_VECT:
	LD L,0x40
	reti
	
	SECTION	"LCDIRQ",HOME[$48]
LCD_VECT:
	LD L,0x48
	reti

	SECTION	"TimerIRQ",HOME[$50]
TIMER_VECT:
	LD L,0x50
	reti

	SECTION	"SerialIRQ",HOME[$58]
SERIAL_VECT:
	LD L,0x58
	reti

	SECTION	"JoypadIRQ",HOME[$60]
JOYPAD_VECT:
	LD L,0x60
	reti
	
	SECTION "Jump Mem Test",HOME[$80]
JP_TEST_MEM_TARGET:
	LD A,0x00
	JP JP_TEST_MEM_RET

SECTION "START",HOME[0x100]
NOP
JP 0x200 
	;; $0104-$0133 (Nintendo logo - do _not_ modify the logo data here or the GB will not run the program)
	DB	$CE,$ED,$66,$66,$CC,$0D,$00,$0B,$03,$73,$00,$83,$00,$0C,$00,$0D
	DB	$00,$08,$11,$1F,$88,$89,$00,$0E,$DC,$CC,$6E,$E6,$DD,$DD,$D9,$99
	DB	$BB,$BB,$67,$63,$6E,$0E,$EC,$CC,$DD,$DC,$99,$9F,$BB,$B9,$33,$3E

	;; $0134-$013E (Game title - up to 11 upper case ASCII characters; pad with $00)
	DB	"TEST CALLS"
	;; $013F-$0142 (Product code - 4 ASCII characters, assigned by Nintendo, just leave blank)
	DB	"    "
	;; $0143 (Color GameBoy compatibility code)
	DB	$00	;; $00 - DMG 
			;; $80 - DMG/GBC
			;; $C0 - GBC Only cartridge
	;; $0144 (High-nibble of license code - normally $00 if $014B != $33)
	DB	$00
	;; $0145 (Low-nibble of license code - normally $00 if $014B != $33)
	DB	$00
	;; $0146 (GameBoy/Super GameBoy indicator)
	DB	$00	;; $00 - GameBoy
	;; $0147 (Cartridge type - all Color GameBoy cartridges are at least $19)
	DB	$00	;; $00 - ROM Only
	;; $0148 (ROM size)
	DB	$00	;; $00 - 256Kbit = 32Kbyte = 2 banks
	;; $0149 (RAM size)
	DB	$00	;; $00 - None
	;; $014A (Destination code)
	DB	$00	;; $01 - All others
			;; $00 - Japan
	;; $014B (Licensee code - this _must_ be $33)
	DB	$33	;; $33 - Check $0144/$0145 for Licensee code.
	;; $014C (Mask ROM version - handled by RGBFIX)
	DB	$00
	;; $014D (Complement check)
	DB	$00
	;; $014E-$014F (Cartridge checksum)
	DB	$00,$00

SECTION "TEST",HOME[0x200]
DI

LD D,0x00
CALL FUNCTION_ONE ;EXPECT: CYCLES=24
NOP ;EXPECT: D=0x05

LD A,0x00
LD D,0x00
OR 0x00 ;EXPECT: F=0x80
CALL NZ,FUNCTION_ONE ;EXPECT: CYCLES=12
NOP ;EXPECT: D=0x00

OR 0x01 ;EXPECT: F=0x00
CALL NZ,FUNCTION_ONE ;EXPECT: CYCLES=24
NOP ;EXPECT: D=0x05

LD D,0x00
SCF
CCF
CALL C,FUNCTION_ONE ;EXPECT: CYCLES=12
NOP ;EXPECT: D=0x00

SCF
CALL C,FUNCTION_ONE ;EXPECT: CYCLES=24
NOP ;EXPECT: D=0x05

LD D,0x00
CALL NC,FUNCTION_ONE ;EXPECT: CYCLES=12
NOP ;EXPECT: D=0x00

CCF
CALL NC,FUNCTION_ONE ;EXPECT: CYCLES=24
NOP ;EXPECT: D=0x05

LD A,0x00
LD D,0x00
OR 0x01 ;EXPECT: A=0x01 F=0x00
CALL Z,FUNCTION_ONE ;EXPECT: CYCLES=12
NOP ;EXPECT: D=0x00

XOR 0x01 ;EXPECT: A=0x00 F=0x80
CALL Z,FUNCTION_ONE ;EXPECT: CYCLES=24
NOP ;EXPECT: D=0x05

LD A,0x01
OR 0x01 ;EXPECT: A=0x01 F=0x00
CALL TEST_Z
NOP ;EXPECT: A=0x80

LD A,0x01
XOR 0x01 ;EXPECT: A=0x00 F=0x80
CALL TEST_Z_J
NOP ;EXPECT: A=0x00

CALL TEST_N
NOP ;EXPECT: A=0x80

LD A,0xFE
CP A ;EXPECT: A=0xFE
CALL TEST_N_J
NOP ;EXPECT: A=0x01

SCF
CCF
CALL TEST_C
NOP ;EXPECT: A=0x80

SCF
CALL TEST_C_J
NOP ;EXPECT: A=0x00

CALL TEST_NC
NOP ;EXPECT: A=0x80

CCF
CALL TEST_NC_J
NOP ;EXPECT: A=0xFF

CALL TEST_RET
NOP ;EXPECT: A=0x00

DI ;EXPECT: CYCLES=4 INTERRUPTS=0

CALL TEST_RETI
NOP ;EXPECT: A=0x00 INTERRUPTS=1

DI ;EXPECT: CYCLES=4 INTERRUPTS=0

NOP ;EXPECT: END=1

FUNCTION_ONE:
LD D,0x05
RET ;EXPECT: CYCLES=16

TEST_Z:
LD A,0x01
SUB 0x00
RET Z ;EXPECT: CYCLES=8
LD A,0x80
RET ;EXPECT: CYCLES=16

TEST_Z_J:
LD A,0x00
SUB 0x00
RET Z ;EXPECT: CYCLES=20
LD A,0x80
RET ;EXPECT: CYCLES=16

TEST_C:
LD A,0xFF
ADD A,0x00
RET C ;EXPECT: CYCLES=8
LD A,0x80
RET ;EXPECT: CYCLES=16

TEST_C_J:
LD A,0xFF
ADD A,0x01
RET C ;EXPECT: CYCLES=20
LD A,0x80
RET ;EXPECT: CYCLES=16

TEST_NC:
LD A,0xFF
ADD A,0x01
RET NC ;EXPECT: CYCLES=8
LD A,0x80
RET ;EXPECT: CYCLES=16

TEST_NC_J:
LD A,0xFF
ADD A,0x00
RET NC ;EXPECT: CYCLES=20
LD A,0x80
RET ;EXPECT: CYCLES=16

TEST_N:
LD A,0x00
SUB 0x00
RET NZ ;EXPECT: CYCLES=8
LD A,0x80
RET ;EXPECT: CYCLES=16

TEST_N_J:
LD A,0x00
ADD A,0x01
RET NZ ;EXPECT: CYCLES=20
LD A,0x80
RET ;EXPECT: CYCLES=16

TEST_RET:
LD A,0x00
RET ;EXPECT: CYCLES=16
LD A,0x80
RET ;EXPECT: CYCLES=16

TEST_RETI:
LD A,0x00
RETI ;EXPECT: CYCLES=16 INTERRUPTS=1
LD A,0x80
RET ;EXPECT: CYCLES=16
