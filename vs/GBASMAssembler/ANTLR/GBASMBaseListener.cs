//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GBASM.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IGBASMListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
public partial class GBASMBaseListener : IGBASMListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.eval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEval([NotNull] GBASMParser.EvalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.eval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEval([NotNull] GBASMParser.EvalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExp([NotNull] GBASMParser.ExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExp([NotNull] GBASMParser.ExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOp([NotNull] GBASMParser.OpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOp([NotNull] GBASMParser.OpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.sys"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSys([NotNull] GBASMParser.SysContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.sys"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSys([NotNull] GBASMParser.SysContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.triad"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTriad([NotNull] GBASMParser.TriadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.triad"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTriad([NotNull] GBASMParser.TriadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.biad"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBiad([NotNull] GBASMParser.BiadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.biad"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBiad([NotNull] GBASMParser.BiadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.monad"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMonad([NotNull] GBASMParser.MonadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.monad"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMonad([NotNull] GBASMParser.MonadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArg([NotNull] GBASMParser.ArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArg([NotNull] GBASMParser.ArgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.memory"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemory([NotNull] GBASMParser.MemoryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.memory"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemory([NotNull] GBASMParser.MemoryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.offset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOffset([NotNull] GBASMParser.OffsetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.offset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOffset([NotNull] GBASMParser.OffsetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.register"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRegister([NotNull] GBASMParser.RegisterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.register"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRegister([NotNull] GBASMParser.RegisterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.flag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFlag([NotNull] GBASMParser.FlagContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.flag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFlag([NotNull] GBASMParser.FlagContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.data"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterData([NotNull] GBASMParser.DataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.data"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitData([NotNull] GBASMParser.DataContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.db"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDb([NotNull] GBASMParser.DbContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.db"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDb([NotNull] GBASMParser.DbContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.include"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInclude([NotNull] GBASMParser.IncludeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.include"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInclude([NotNull] GBASMParser.IncludeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSection([NotNull] GBASMParser.SectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSection([NotNull] GBASMParser.SectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.repblock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepblock([NotNull] GBASMParser.RepblockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.repblock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepblock([NotNull] GBASMParser.RepblockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.string_data"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString_data([NotNull] GBASMParser.String_dataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.string_data"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString_data([NotNull] GBASMParser.String_dataContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.jump"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJump([NotNull] GBASMParser.JumpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.jump"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJump([NotNull] GBASMParser.JumpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabel([NotNull] GBASMParser.LabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabel([NotNull] GBASMParser.LabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] GBASMParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] GBASMParser.ValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GBASMParser.negvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegvalue([NotNull] GBASMParser.NegvalueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GBASMParser.negvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegvalue([NotNull] GBASMParser.NegvalueContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
